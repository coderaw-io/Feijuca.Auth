### YamlMime:XRefMap
sorted: true
references:
- uid: TokenManager.Api.Controllers
  name: TokenManager.Api.Controllers
  href: api/TokenManager.Api.Controllers.html
  commentId: N:TokenManager.Api.Controllers
  fullName: TokenManager.Api.Controllers
  nameWithType: TokenManager.Api.Controllers
- uid: TokenManager.Api.Controllers.ClientController
  name: ClientController
  href: api/TokenManager.Api.Controllers.ClientController.html
  commentId: T:TokenManager.Api.Controllers.ClientController
  fullName: TokenManager.Api.Controllers.ClientController
  nameWithType: ClientController
- uid: TokenManager.Api.Controllers.ClientController.#ctor(MediatR.IMediator)
  name: ClientController(IMediator)
  href: api/TokenManager.Api.Controllers.ClientController.html#TokenManager_Api_Controllers_ClientController__ctor_MediatR_IMediator_
  commentId: M:TokenManager.Api.Controllers.ClientController.#ctor(MediatR.IMediator)
  name.vb: New(IMediator)
  fullName: TokenManager.Api.Controllers.ClientController.ClientController(MediatR.IMediator)
  fullName.vb: TokenManager.Api.Controllers.ClientController.New(MediatR.IMediator)
  nameWithType: ClientController.ClientController(IMediator)
  nameWithType.vb: ClientController.New(IMediator)
- uid: TokenManager.Api.Controllers.ClientController.#ctor*
  name: ClientController
  href: api/TokenManager.Api.Controllers.ClientController.html#TokenManager_Api_Controllers_ClientController__ctor_
  commentId: Overload:TokenManager.Api.Controllers.ClientController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: TokenManager.Api.Controllers.ClientController.ClientController
  fullName.vb: TokenManager.Api.Controllers.ClientController.New
  nameWithType: ClientController.ClientController
  nameWithType.vb: ClientController.New
- uid: TokenManager.Api.Controllers.ClientController.GetClients(System.String,System.Threading.CancellationToken)
  name: GetClients(string, CancellationToken)
  href: api/TokenManager.Api.Controllers.ClientController.html#TokenManager_Api_Controllers_ClientController_GetClients_System_String_System_Threading_CancellationToken_
  commentId: M:TokenManager.Api.Controllers.ClientController.GetClients(System.String,System.Threading.CancellationToken)
  name.vb: GetClients(String, CancellationToken)
  fullName: TokenManager.Api.Controllers.ClientController.GetClients(string, System.Threading.CancellationToken)
  fullName.vb: TokenManager.Api.Controllers.ClientController.GetClients(String, System.Threading.CancellationToken)
  nameWithType: ClientController.GetClients(string, CancellationToken)
  nameWithType.vb: ClientController.GetClients(String, CancellationToken)
- uid: TokenManager.Api.Controllers.ClientController.GetClients*
  name: GetClients
  href: api/TokenManager.Api.Controllers.ClientController.html#TokenManager_Api_Controllers_ClientController_GetClients_
  commentId: Overload:TokenManager.Api.Controllers.ClientController.GetClients
  isSpec: "True"
  fullName: TokenManager.Api.Controllers.ClientController.GetClients
  nameWithType: ClientController.GetClients
- uid: TokenManager.Api.Controllers.GroupController
  name: GroupController
  href: api/TokenManager.Api.Controllers.GroupController.html
  commentId: T:TokenManager.Api.Controllers.GroupController
  fullName: TokenManager.Api.Controllers.GroupController
  nameWithType: GroupController
- uid: TokenManager.Api.Controllers.GroupController.#ctor(MediatR.IMediator)
  name: GroupController(IMediator)
  href: api/TokenManager.Api.Controllers.GroupController.html#TokenManager_Api_Controllers_GroupController__ctor_MediatR_IMediator_
  commentId: M:TokenManager.Api.Controllers.GroupController.#ctor(MediatR.IMediator)
  name.vb: New(IMediator)
  fullName: TokenManager.Api.Controllers.GroupController.GroupController(MediatR.IMediator)
  fullName.vb: TokenManager.Api.Controllers.GroupController.New(MediatR.IMediator)
  nameWithType: GroupController.GroupController(IMediator)
  nameWithType.vb: GroupController.New(IMediator)
- uid: TokenManager.Api.Controllers.GroupController.#ctor*
  name: GroupController
  href: api/TokenManager.Api.Controllers.GroupController.html#TokenManager_Api_Controllers_GroupController__ctor_
  commentId: Overload:TokenManager.Api.Controllers.GroupController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: TokenManager.Api.Controllers.GroupController.GroupController
  fullName.vb: TokenManager.Api.Controllers.GroupController.New
  nameWithType: GroupController.GroupController
  nameWithType.vb: GroupController.New
- uid: TokenManager.Api.Controllers.GroupController.CreateGroup(System.String,TokenManager.Application.Requests.User.AddGroupRequest,System.Threading.CancellationToken)
  name: CreateGroup(string, AddGroupRequest, CancellationToken)
  href: api/TokenManager.Api.Controllers.GroupController.html#TokenManager_Api_Controllers_GroupController_CreateGroup_System_String_TokenManager_Application_Requests_User_AddGroupRequest_System_Threading_CancellationToken_
  commentId: M:TokenManager.Api.Controllers.GroupController.CreateGroup(System.String,TokenManager.Application.Requests.User.AddGroupRequest,System.Threading.CancellationToken)
  name.vb: CreateGroup(String, AddGroupRequest, CancellationToken)
  fullName: TokenManager.Api.Controllers.GroupController.CreateGroup(string, TokenManager.Application.Requests.User.AddGroupRequest, System.Threading.CancellationToken)
  fullName.vb: TokenManager.Api.Controllers.GroupController.CreateGroup(String, TokenManager.Application.Requests.User.AddGroupRequest, System.Threading.CancellationToken)
  nameWithType: GroupController.CreateGroup(string, AddGroupRequest, CancellationToken)
  nameWithType.vb: GroupController.CreateGroup(String, AddGroupRequest, CancellationToken)
- uid: TokenManager.Api.Controllers.GroupController.CreateGroup*
  name: CreateGroup
  href: api/TokenManager.Api.Controllers.GroupController.html#TokenManager_Api_Controllers_GroupController_CreateGroup_
  commentId: Overload:TokenManager.Api.Controllers.GroupController.CreateGroup
  isSpec: "True"
  fullName: TokenManager.Api.Controllers.GroupController.CreateGroup
  nameWithType: GroupController.CreateGroup
- uid: TokenManager.Api.Controllers.GroupController.DeleteGroup(System.String,System.Guid,System.Threading.CancellationToken)
  name: DeleteGroup(string, Guid, CancellationToken)
  href: api/TokenManager.Api.Controllers.GroupController.html#TokenManager_Api_Controllers_GroupController_DeleteGroup_System_String_System_Guid_System_Threading_CancellationToken_
  commentId: M:TokenManager.Api.Controllers.GroupController.DeleteGroup(System.String,System.Guid,System.Threading.CancellationToken)
  name.vb: DeleteGroup(String, Guid, CancellationToken)
  fullName: TokenManager.Api.Controllers.GroupController.DeleteGroup(string, System.Guid, System.Threading.CancellationToken)
  fullName.vb: TokenManager.Api.Controllers.GroupController.DeleteGroup(String, System.Guid, System.Threading.CancellationToken)
  nameWithType: GroupController.DeleteGroup(string, Guid, CancellationToken)
  nameWithType.vb: GroupController.DeleteGroup(String, Guid, CancellationToken)
- uid: TokenManager.Api.Controllers.GroupController.DeleteGroup*
  name: DeleteGroup
  href: api/TokenManager.Api.Controllers.GroupController.html#TokenManager_Api_Controllers_GroupController_DeleteGroup_
  commentId: Overload:TokenManager.Api.Controllers.GroupController.DeleteGroup
  isSpec: "True"
  fullName: TokenManager.Api.Controllers.GroupController.DeleteGroup
  nameWithType: GroupController.DeleteGroup
- uid: TokenManager.Api.Controllers.GroupController.GetGroups(System.String,System.Threading.CancellationToken)
  name: GetGroups(string, CancellationToken)
  href: api/TokenManager.Api.Controllers.GroupController.html#TokenManager_Api_Controllers_GroupController_GetGroups_System_String_System_Threading_CancellationToken_
  commentId: M:TokenManager.Api.Controllers.GroupController.GetGroups(System.String,System.Threading.CancellationToken)
  name.vb: GetGroups(String, CancellationToken)
  fullName: TokenManager.Api.Controllers.GroupController.GetGroups(string, System.Threading.CancellationToken)
  fullName.vb: TokenManager.Api.Controllers.GroupController.GetGroups(String, System.Threading.CancellationToken)
  nameWithType: GroupController.GetGroups(string, CancellationToken)
  nameWithType.vb: GroupController.GetGroups(String, CancellationToken)
- uid: TokenManager.Api.Controllers.GroupController.GetGroups*
  name: GetGroups
  href: api/TokenManager.Api.Controllers.GroupController.html#TokenManager_Api_Controllers_GroupController_GetGroups_
  commentId: Overload:TokenManager.Api.Controllers.GroupController.GetGroups
  isSpec: "True"
  fullName: TokenManager.Api.Controllers.GroupController.GetGroups
  nameWithType: GroupController.GetGroups
- uid: TokenManager.Api.Controllers.GroupRolesController
  name: GroupRolesController
  href: api/TokenManager.Api.Controllers.GroupRolesController.html
  commentId: T:TokenManager.Api.Controllers.GroupRolesController
  fullName: TokenManager.Api.Controllers.GroupRolesController
  nameWithType: GroupRolesController
- uid: TokenManager.Api.Controllers.GroupRolesController.#ctor(MediatR.IMediator)
  name: GroupRolesController(IMediator)
  href: api/TokenManager.Api.Controllers.GroupRolesController.html#TokenManager_Api_Controllers_GroupRolesController__ctor_MediatR_IMediator_
  commentId: M:TokenManager.Api.Controllers.GroupRolesController.#ctor(MediatR.IMediator)
  name.vb: New(IMediator)
  fullName: TokenManager.Api.Controllers.GroupRolesController.GroupRolesController(MediatR.IMediator)
  fullName.vb: TokenManager.Api.Controllers.GroupRolesController.New(MediatR.IMediator)
  nameWithType: GroupRolesController.GroupRolesController(IMediator)
  nameWithType.vb: GroupRolesController.New(IMediator)
- uid: TokenManager.Api.Controllers.GroupRolesController.#ctor*
  name: GroupRolesController
  href: api/TokenManager.Api.Controllers.GroupRolesController.html#TokenManager_Api_Controllers_GroupRolesController__ctor_
  commentId: Overload:TokenManager.Api.Controllers.GroupRolesController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: TokenManager.Api.Controllers.GroupRolesController.GroupRolesController
  fullName.vb: TokenManager.Api.Controllers.GroupRolesController.New
  nameWithType: GroupRolesController.GroupRolesController
  nameWithType.vb: GroupRolesController.New
- uid: TokenManager.Api.Controllers.GroupRolesController.AddRoleToGroup(System.String,TokenManager.Application.Requests.RoleGroup.RoleToGroupRequest,System.Threading.CancellationToken)
  name: AddRoleToGroup(string, RoleToGroupRequest, CancellationToken)
  href: api/TokenManager.Api.Controllers.GroupRolesController.html#TokenManager_Api_Controllers_GroupRolesController_AddRoleToGroup_System_String_TokenManager_Application_Requests_RoleGroup_RoleToGroupRequest_System_Threading_CancellationToken_
  commentId: M:TokenManager.Api.Controllers.GroupRolesController.AddRoleToGroup(System.String,TokenManager.Application.Requests.RoleGroup.RoleToGroupRequest,System.Threading.CancellationToken)
  name.vb: AddRoleToGroup(String, RoleToGroupRequest, CancellationToken)
  fullName: TokenManager.Api.Controllers.GroupRolesController.AddRoleToGroup(string, TokenManager.Application.Requests.RoleGroup.RoleToGroupRequest, System.Threading.CancellationToken)
  fullName.vb: TokenManager.Api.Controllers.GroupRolesController.AddRoleToGroup(String, TokenManager.Application.Requests.RoleGroup.RoleToGroupRequest, System.Threading.CancellationToken)
  nameWithType: GroupRolesController.AddRoleToGroup(string, RoleToGroupRequest, CancellationToken)
  nameWithType.vb: GroupRolesController.AddRoleToGroup(String, RoleToGroupRequest, CancellationToken)
- uid: TokenManager.Api.Controllers.GroupRolesController.AddRoleToGroup*
  name: AddRoleToGroup
  href: api/TokenManager.Api.Controllers.GroupRolesController.html#TokenManager_Api_Controllers_GroupRolesController_AddRoleToGroup_
  commentId: Overload:TokenManager.Api.Controllers.GroupRolesController.AddRoleToGroup
  isSpec: "True"
  fullName: TokenManager.Api.Controllers.GroupRolesController.AddRoleToGroup
  nameWithType: GroupRolesController.AddRoleToGroup
- uid: TokenManager.Api.Controllers.GroupRolesController.GetGroupRoles(System.String,System.String,System.Threading.CancellationToken)
  name: GetGroupRoles(string, string, CancellationToken)
  href: api/TokenManager.Api.Controllers.GroupRolesController.html#TokenManager_Api_Controllers_GroupRolesController_GetGroupRoles_System_String_System_String_System_Threading_CancellationToken_
  commentId: M:TokenManager.Api.Controllers.GroupRolesController.GetGroupRoles(System.String,System.String,System.Threading.CancellationToken)
  name.vb: GetGroupRoles(String, String, CancellationToken)
  fullName: TokenManager.Api.Controllers.GroupRolesController.GetGroupRoles(string, string, System.Threading.CancellationToken)
  fullName.vb: TokenManager.Api.Controllers.GroupRolesController.GetGroupRoles(String, String, System.Threading.CancellationToken)
  nameWithType: GroupRolesController.GetGroupRoles(string, string, CancellationToken)
  nameWithType.vb: GroupRolesController.GetGroupRoles(String, String, CancellationToken)
- uid: TokenManager.Api.Controllers.GroupRolesController.GetGroupRoles*
  name: GetGroupRoles
  href: api/TokenManager.Api.Controllers.GroupRolesController.html#TokenManager_Api_Controllers_GroupRolesController_GetGroupRoles_
  commentId: Overload:TokenManager.Api.Controllers.GroupRolesController.GetGroupRoles
  isSpec: "True"
  fullName: TokenManager.Api.Controllers.GroupRolesController.GetGroupRoles
  nameWithType: GroupRolesController.GetGroupRoles
- uid: TokenManager.Api.Controllers.GroupRolesController.RemoveRoleToGroup(System.String,TokenManager.Application.Requests.RoleGroup.RoleToGroupRequest,System.Threading.CancellationToken)
  name: RemoveRoleToGroup(string, RoleToGroupRequest, CancellationToken)
  href: api/TokenManager.Api.Controllers.GroupRolesController.html#TokenManager_Api_Controllers_GroupRolesController_RemoveRoleToGroup_System_String_TokenManager_Application_Requests_RoleGroup_RoleToGroupRequest_System_Threading_CancellationToken_
  commentId: M:TokenManager.Api.Controllers.GroupRolesController.RemoveRoleToGroup(System.String,TokenManager.Application.Requests.RoleGroup.RoleToGroupRequest,System.Threading.CancellationToken)
  name.vb: RemoveRoleToGroup(String, RoleToGroupRequest, CancellationToken)
  fullName: TokenManager.Api.Controllers.GroupRolesController.RemoveRoleToGroup(string, TokenManager.Application.Requests.RoleGroup.RoleToGroupRequest, System.Threading.CancellationToken)
  fullName.vb: TokenManager.Api.Controllers.GroupRolesController.RemoveRoleToGroup(String, TokenManager.Application.Requests.RoleGroup.RoleToGroupRequest, System.Threading.CancellationToken)
  nameWithType: GroupRolesController.RemoveRoleToGroup(string, RoleToGroupRequest, CancellationToken)
  nameWithType.vb: GroupRolesController.RemoveRoleToGroup(String, RoleToGroupRequest, CancellationToken)
- uid: TokenManager.Api.Controllers.GroupRolesController.RemoveRoleToGroup*
  name: RemoveRoleToGroup
  href: api/TokenManager.Api.Controllers.GroupRolesController.html#TokenManager_Api_Controllers_GroupRolesController_RemoveRoleToGroup_
  commentId: Overload:TokenManager.Api.Controllers.GroupRolesController.RemoveRoleToGroup
  isSpec: "True"
  fullName: TokenManager.Api.Controllers.GroupRolesController.RemoveRoleToGroup
  nameWithType: GroupRolesController.RemoveRoleToGroup
- uid: TokenManager.Api.Controllers.GroupUsersController
  name: GroupUsersController
  href: api/TokenManager.Api.Controllers.GroupUsersController.html
  commentId: T:TokenManager.Api.Controllers.GroupUsersController
  fullName: TokenManager.Api.Controllers.GroupUsersController
  nameWithType: GroupUsersController
- uid: TokenManager.Api.Controllers.GroupUsersController.#ctor(MediatR.IMediator)
  name: GroupUsersController(IMediator)
  href: api/TokenManager.Api.Controllers.GroupUsersController.html#TokenManager_Api_Controllers_GroupUsersController__ctor_MediatR_IMediator_
  commentId: M:TokenManager.Api.Controllers.GroupUsersController.#ctor(MediatR.IMediator)
  name.vb: New(IMediator)
  fullName: TokenManager.Api.Controllers.GroupUsersController.GroupUsersController(MediatR.IMediator)
  fullName.vb: TokenManager.Api.Controllers.GroupUsersController.New(MediatR.IMediator)
  nameWithType: GroupUsersController.GroupUsersController(IMediator)
  nameWithType.vb: GroupUsersController.New(IMediator)
- uid: TokenManager.Api.Controllers.GroupUsersController.#ctor*
  name: GroupUsersController
  href: api/TokenManager.Api.Controllers.GroupUsersController.html#TokenManager_Api_Controllers_GroupUsersController__ctor_
  commentId: Overload:TokenManager.Api.Controllers.GroupUsersController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: TokenManager.Api.Controllers.GroupUsersController.GroupUsersController
  fullName.vb: TokenManager.Api.Controllers.GroupUsersController.New
  nameWithType: GroupUsersController.GroupUsersController
  nameWithType.vb: GroupUsersController.New
- uid: TokenManager.Api.Controllers.GroupUsersController.AddUserToGroup(System.String,System.Guid,System.Guid,System.Threading.CancellationToken)
  name: AddUserToGroup(string, Guid, Guid, CancellationToken)
  href: api/TokenManager.Api.Controllers.GroupUsersController.html#TokenManager_Api_Controllers_GroupUsersController_AddUserToGroup_System_String_System_Guid_System_Guid_System_Threading_CancellationToken_
  commentId: M:TokenManager.Api.Controllers.GroupUsersController.AddUserToGroup(System.String,System.Guid,System.Guid,System.Threading.CancellationToken)
  name.vb: AddUserToGroup(String, Guid, Guid, CancellationToken)
  fullName: TokenManager.Api.Controllers.GroupUsersController.AddUserToGroup(string, System.Guid, System.Guid, System.Threading.CancellationToken)
  fullName.vb: TokenManager.Api.Controllers.GroupUsersController.AddUserToGroup(String, System.Guid, System.Guid, System.Threading.CancellationToken)
  nameWithType: GroupUsersController.AddUserToGroup(string, Guid, Guid, CancellationToken)
  nameWithType.vb: GroupUsersController.AddUserToGroup(String, Guid, Guid, CancellationToken)
- uid: TokenManager.Api.Controllers.GroupUsersController.AddUserToGroup*
  name: AddUserToGroup
  href: api/TokenManager.Api.Controllers.GroupUsersController.html#TokenManager_Api_Controllers_GroupUsersController_AddUserToGroup_
  commentId: Overload:TokenManager.Api.Controllers.GroupUsersController.AddUserToGroup
  isSpec: "True"
  fullName: TokenManager.Api.Controllers.GroupUsersController.AddUserToGroup
  nameWithType: GroupUsersController.AddUserToGroup
- uid: TokenManager.Api.Controllers.GroupUsersController.GetUsersInGroup(System.String,System.String,System.Threading.CancellationToken)
  name: GetUsersInGroup(string, string, CancellationToken)
  href: api/TokenManager.Api.Controllers.GroupUsersController.html#TokenManager_Api_Controllers_GroupUsersController_GetUsersInGroup_System_String_System_String_System_Threading_CancellationToken_
  commentId: M:TokenManager.Api.Controllers.GroupUsersController.GetUsersInGroup(System.String,System.String,System.Threading.CancellationToken)
  name.vb: GetUsersInGroup(String, String, CancellationToken)
  fullName: TokenManager.Api.Controllers.GroupUsersController.GetUsersInGroup(string, string, System.Threading.CancellationToken)
  fullName.vb: TokenManager.Api.Controllers.GroupUsersController.GetUsersInGroup(String, String, System.Threading.CancellationToken)
  nameWithType: GroupUsersController.GetUsersInGroup(string, string, CancellationToken)
  nameWithType.vb: GroupUsersController.GetUsersInGroup(String, String, CancellationToken)
- uid: TokenManager.Api.Controllers.GroupUsersController.GetUsersInGroup*
  name: GetUsersInGroup
  href: api/TokenManager.Api.Controllers.GroupUsersController.html#TokenManager_Api_Controllers_GroupUsersController_GetUsersInGroup_
  commentId: Overload:TokenManager.Api.Controllers.GroupUsersController.GetUsersInGroup
  isSpec: "True"
  fullName: TokenManager.Api.Controllers.GroupUsersController.GetUsersInGroup
  nameWithType: GroupUsersController.GetUsersInGroup
- uid: TokenManager.Api.Controllers.GroupUsersController.RemoveUserFromGroup(System.String,System.Guid,System.Guid,System.Threading.CancellationToken)
  name: RemoveUserFromGroup(string, Guid, Guid, CancellationToken)
  href: api/TokenManager.Api.Controllers.GroupUsersController.html#TokenManager_Api_Controllers_GroupUsersController_RemoveUserFromGroup_System_String_System_Guid_System_Guid_System_Threading_CancellationToken_
  commentId: M:TokenManager.Api.Controllers.GroupUsersController.RemoveUserFromGroup(System.String,System.Guid,System.Guid,System.Threading.CancellationToken)
  name.vb: RemoveUserFromGroup(String, Guid, Guid, CancellationToken)
  fullName: TokenManager.Api.Controllers.GroupUsersController.RemoveUserFromGroup(string, System.Guid, System.Guid, System.Threading.CancellationToken)
  fullName.vb: TokenManager.Api.Controllers.GroupUsersController.RemoveUserFromGroup(String, System.Guid, System.Guid, System.Threading.CancellationToken)
  nameWithType: GroupUsersController.RemoveUserFromGroup(string, Guid, Guid, CancellationToken)
  nameWithType.vb: GroupUsersController.RemoveUserFromGroup(String, Guid, Guid, CancellationToken)
- uid: TokenManager.Api.Controllers.GroupUsersController.RemoveUserFromGroup*
  name: RemoveUserFromGroup
  href: api/TokenManager.Api.Controllers.GroupUsersController.html#TokenManager_Api_Controllers_GroupUsersController_RemoveUserFromGroup_
  commentId: Overload:TokenManager.Api.Controllers.GroupUsersController.RemoveUserFromGroup
  isSpec: "True"
  fullName: TokenManager.Api.Controllers.GroupUsersController.RemoveUserFromGroup
  nameWithType: GroupUsersController.RemoveUserFromGroup
- uid: TokenManager.Api.Controllers.RoleController
  name: RoleController
  href: api/TokenManager.Api.Controllers.RoleController.html
  commentId: T:TokenManager.Api.Controllers.RoleController
  fullName: TokenManager.Api.Controllers.RoleController
  nameWithType: RoleController
- uid: TokenManager.Api.Controllers.RoleController.#ctor(MediatR.IMediator)
  name: RoleController(IMediator)
  href: api/TokenManager.Api.Controllers.RoleController.html#TokenManager_Api_Controllers_RoleController__ctor_MediatR_IMediator_
  commentId: M:TokenManager.Api.Controllers.RoleController.#ctor(MediatR.IMediator)
  name.vb: New(IMediator)
  fullName: TokenManager.Api.Controllers.RoleController.RoleController(MediatR.IMediator)
  fullName.vb: TokenManager.Api.Controllers.RoleController.New(MediatR.IMediator)
  nameWithType: RoleController.RoleController(IMediator)
  nameWithType.vb: RoleController.New(IMediator)
- uid: TokenManager.Api.Controllers.RoleController.#ctor*
  name: RoleController
  href: api/TokenManager.Api.Controllers.RoleController.html#TokenManager_Api_Controllers_RoleController__ctor_
  commentId: Overload:TokenManager.Api.Controllers.RoleController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: TokenManager.Api.Controllers.RoleController.RoleController
  fullName.vb: TokenManager.Api.Controllers.RoleController.New
  nameWithType: RoleController.RoleController
  nameWithType.vb: RoleController.New
- uid: TokenManager.Api.Controllers.RoleController.AddRole(System.String,TokenManager.Application.Requests.Role.AddRoleRequest,System.Threading.CancellationToken)
  name: AddRole(string, AddRoleRequest, CancellationToken)
  href: api/TokenManager.Api.Controllers.RoleController.html#TokenManager_Api_Controllers_RoleController_AddRole_System_String_TokenManager_Application_Requests_Role_AddRoleRequest_System_Threading_CancellationToken_
  commentId: M:TokenManager.Api.Controllers.RoleController.AddRole(System.String,TokenManager.Application.Requests.Role.AddRoleRequest,System.Threading.CancellationToken)
  name.vb: AddRole(String, AddRoleRequest, CancellationToken)
  fullName: TokenManager.Api.Controllers.RoleController.AddRole(string, TokenManager.Application.Requests.Role.AddRoleRequest, System.Threading.CancellationToken)
  fullName.vb: TokenManager.Api.Controllers.RoleController.AddRole(String, TokenManager.Application.Requests.Role.AddRoleRequest, System.Threading.CancellationToken)
  nameWithType: RoleController.AddRole(string, AddRoleRequest, CancellationToken)
  nameWithType.vb: RoleController.AddRole(String, AddRoleRequest, CancellationToken)
- uid: TokenManager.Api.Controllers.RoleController.AddRole*
  name: AddRole
  href: api/TokenManager.Api.Controllers.RoleController.html#TokenManager_Api_Controllers_RoleController_AddRole_
  commentId: Overload:TokenManager.Api.Controllers.RoleController.AddRole
  isSpec: "True"
  fullName: TokenManager.Api.Controllers.RoleController.AddRole
  nameWithType: RoleController.AddRole
- uid: TokenManager.Api.Controllers.RoleController.GetRoles(System.String,System.Threading.CancellationToken)
  name: GetRoles(string, CancellationToken)
  href: api/TokenManager.Api.Controllers.RoleController.html#TokenManager_Api_Controllers_RoleController_GetRoles_System_String_System_Threading_CancellationToken_
  commentId: M:TokenManager.Api.Controllers.RoleController.GetRoles(System.String,System.Threading.CancellationToken)
  name.vb: GetRoles(String, CancellationToken)
  fullName: TokenManager.Api.Controllers.RoleController.GetRoles(string, System.Threading.CancellationToken)
  fullName.vb: TokenManager.Api.Controllers.RoleController.GetRoles(String, System.Threading.CancellationToken)
  nameWithType: RoleController.GetRoles(string, CancellationToken)
  nameWithType.vb: RoleController.GetRoles(String, CancellationToken)
- uid: TokenManager.Api.Controllers.RoleController.GetRoles*
  name: GetRoles
  href: api/TokenManager.Api.Controllers.RoleController.html#TokenManager_Api_Controllers_RoleController_GetRoles_
  commentId: Overload:TokenManager.Api.Controllers.RoleController.GetRoles
  isSpec: "True"
  fullName: TokenManager.Api.Controllers.RoleController.GetRoles
  nameWithType: RoleController.GetRoles
- uid: TokenManager.Api.Controllers.UserController
  name: UserController
  href: api/TokenManager.Api.Controllers.UserController.html
  commentId: T:TokenManager.Api.Controllers.UserController
  fullName: TokenManager.Api.Controllers.UserController
  nameWithType: UserController
- uid: TokenManager.Api.Controllers.UserController.#ctor(MediatR.IMediator)
  name: UserController(IMediator)
  href: api/TokenManager.Api.Controllers.UserController.html#TokenManager_Api_Controllers_UserController__ctor_MediatR_IMediator_
  commentId: M:TokenManager.Api.Controllers.UserController.#ctor(MediatR.IMediator)
  name.vb: New(IMediator)
  fullName: TokenManager.Api.Controllers.UserController.UserController(MediatR.IMediator)
  fullName.vb: TokenManager.Api.Controllers.UserController.New(MediatR.IMediator)
  nameWithType: UserController.UserController(IMediator)
  nameWithType.vb: UserController.New(IMediator)
- uid: TokenManager.Api.Controllers.UserController.#ctor*
  name: UserController
  href: api/TokenManager.Api.Controllers.UserController.html#TokenManager_Api_Controllers_UserController__ctor_
  commentId: Overload:TokenManager.Api.Controllers.UserController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: TokenManager.Api.Controllers.UserController.UserController
  fullName.vb: TokenManager.Api.Controllers.UserController.New
  nameWithType: UserController.UserController
  nameWithType.vb: UserController.New
- uid: TokenManager.Api.Controllers.UserController.Create(System.String,TokenManager.Application.Requests.User.AddUserRequest,System.Threading.CancellationToken)
  name: Create(string, AddUserRequest, CancellationToken)
  href: api/TokenManager.Api.Controllers.UserController.html#TokenManager_Api_Controllers_UserController_Create_System_String_TokenManager_Application_Requests_User_AddUserRequest_System_Threading_CancellationToken_
  commentId: M:TokenManager.Api.Controllers.UserController.Create(System.String,TokenManager.Application.Requests.User.AddUserRequest,System.Threading.CancellationToken)
  name.vb: Create(String, AddUserRequest, CancellationToken)
  fullName: TokenManager.Api.Controllers.UserController.Create(string, TokenManager.Application.Requests.User.AddUserRequest, System.Threading.CancellationToken)
  fullName.vb: TokenManager.Api.Controllers.UserController.Create(String, TokenManager.Application.Requests.User.AddUserRequest, System.Threading.CancellationToken)
  nameWithType: UserController.Create(string, AddUserRequest, CancellationToken)
  nameWithType.vb: UserController.Create(String, AddUserRequest, CancellationToken)
- uid: TokenManager.Api.Controllers.UserController.Create*
  name: Create
  href: api/TokenManager.Api.Controllers.UserController.html#TokenManager_Api_Controllers_UserController_Create_
  commentId: Overload:TokenManager.Api.Controllers.UserController.Create
  isSpec: "True"
  fullName: TokenManager.Api.Controllers.UserController.Create
  nameWithType: UserController.Create
- uid: TokenManager.Api.Controllers.UserController.Delete(System.String,System.Guid,System.Threading.CancellationToken)
  name: Delete(string, Guid, CancellationToken)
  href: api/TokenManager.Api.Controllers.UserController.html#TokenManager_Api_Controllers_UserController_Delete_System_String_System_Guid_System_Threading_CancellationToken_
  commentId: M:TokenManager.Api.Controllers.UserController.Delete(System.String,System.Guid,System.Threading.CancellationToken)
  name.vb: Delete(String, Guid, CancellationToken)
  fullName: TokenManager.Api.Controllers.UserController.Delete(string, System.Guid, System.Threading.CancellationToken)
  fullName.vb: TokenManager.Api.Controllers.UserController.Delete(String, System.Guid, System.Threading.CancellationToken)
  nameWithType: UserController.Delete(string, Guid, CancellationToken)
  nameWithType.vb: UserController.Delete(String, Guid, CancellationToken)
- uid: TokenManager.Api.Controllers.UserController.Delete*
  name: Delete
  href: api/TokenManager.Api.Controllers.UserController.html#TokenManager_Api_Controllers_UserController_Delete_
  commentId: Overload:TokenManager.Api.Controllers.UserController.Delete
  isSpec: "True"
  fullName: TokenManager.Api.Controllers.UserController.Delete
  nameWithType: UserController.Delete
- uid: TokenManager.Api.Controllers.UserController.GetUsers(System.String,System.Threading.CancellationToken)
  name: GetUsers(string, CancellationToken)
  href: api/TokenManager.Api.Controllers.UserController.html#TokenManager_Api_Controllers_UserController_GetUsers_System_String_System_Threading_CancellationToken_
  commentId: M:TokenManager.Api.Controllers.UserController.GetUsers(System.String,System.Threading.CancellationToken)
  name.vb: GetUsers(String, CancellationToken)
  fullName: TokenManager.Api.Controllers.UserController.GetUsers(string, System.Threading.CancellationToken)
  fullName.vb: TokenManager.Api.Controllers.UserController.GetUsers(String, System.Threading.CancellationToken)
  nameWithType: UserController.GetUsers(string, CancellationToken)
  nameWithType.vb: UserController.GetUsers(String, CancellationToken)
- uid: TokenManager.Api.Controllers.UserController.GetUsers*
  name: GetUsers
  href: api/TokenManager.Api.Controllers.UserController.html#TokenManager_Api_Controllers_UserController_GetUsers_
  commentId: Overload:TokenManager.Api.Controllers.UserController.GetUsers
  isSpec: "True"
  fullName: TokenManager.Api.Controllers.UserController.GetUsers
  nameWithType: UserController.GetUsers
- uid: TokenManager.Api.Controllers.UserController.Login(System.String,TokenManager.Application.Requests.User.LoginUserRequest,System.Threading.CancellationToken)
  name: Login(string, LoginUserRequest, CancellationToken)
  href: api/TokenManager.Api.Controllers.UserController.html#TokenManager_Api_Controllers_UserController_Login_System_String_TokenManager_Application_Requests_User_LoginUserRequest_System_Threading_CancellationToken_
  commentId: M:TokenManager.Api.Controllers.UserController.Login(System.String,TokenManager.Application.Requests.User.LoginUserRequest,System.Threading.CancellationToken)
  name.vb: Login(String, LoginUserRequest, CancellationToken)
  fullName: TokenManager.Api.Controllers.UserController.Login(string, TokenManager.Application.Requests.User.LoginUserRequest, System.Threading.CancellationToken)
  fullName.vb: TokenManager.Api.Controllers.UserController.Login(String, TokenManager.Application.Requests.User.LoginUserRequest, System.Threading.CancellationToken)
  nameWithType: UserController.Login(string, LoginUserRequest, CancellationToken)
  nameWithType.vb: UserController.Login(String, LoginUserRequest, CancellationToken)
- uid: TokenManager.Api.Controllers.UserController.Login*
  name: Login
  href: api/TokenManager.Api.Controllers.UserController.html#TokenManager_Api_Controllers_UserController_Login_
  commentId: Overload:TokenManager.Api.Controllers.UserController.Login
  isSpec: "True"
  fullName: TokenManager.Api.Controllers.UserController.Login
  nameWithType: UserController.Login
- uid: TokenManager.Api.Controllers.UserController.RefreshToken(System.String,TokenManager.Application.Requests.User.RefreshTokenRequest,System.Threading.CancellationToken)
  name: RefreshToken(string, RefreshTokenRequest, CancellationToken)
  href: api/TokenManager.Api.Controllers.UserController.html#TokenManager_Api_Controllers_UserController_RefreshToken_System_String_TokenManager_Application_Requests_User_RefreshTokenRequest_System_Threading_CancellationToken_
  commentId: M:TokenManager.Api.Controllers.UserController.RefreshToken(System.String,TokenManager.Application.Requests.User.RefreshTokenRequest,System.Threading.CancellationToken)
  name.vb: RefreshToken(String, RefreshTokenRequest, CancellationToken)
  fullName: TokenManager.Api.Controllers.UserController.RefreshToken(string, TokenManager.Application.Requests.User.RefreshTokenRequest, System.Threading.CancellationToken)
  fullName.vb: TokenManager.Api.Controllers.UserController.RefreshToken(String, TokenManager.Application.Requests.User.RefreshTokenRequest, System.Threading.CancellationToken)
  nameWithType: UserController.RefreshToken(string, RefreshTokenRequest, CancellationToken)
  nameWithType.vb: UserController.RefreshToken(String, RefreshTokenRequest, CancellationToken)
- uid: TokenManager.Api.Controllers.UserController.RefreshToken*
  name: RefreshToken
  href: api/TokenManager.Api.Controllers.UserController.html#TokenManager_Api_Controllers_UserController_RefreshToken_
  commentId: Overload:TokenManager.Api.Controllers.UserController.RefreshToken
  isSpec: "True"
  fullName: TokenManager.Api.Controllers.UserController.RefreshToken
  nameWithType: UserController.RefreshToken
